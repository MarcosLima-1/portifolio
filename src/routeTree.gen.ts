/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from "./routes/__root"
import { Route as PortifolioRouteRouteImport } from "./routes/_portifolio/route"
import { Route as PortifolioIndexRouteImport } from "./routes/_portifolio/index"
import { Route as PortifolioTimeLineIndexRouteImport } from "./routes/_portifolio/time-line/index"
import { Route as PortifolioProjectsIndexRouteImport } from "./routes/_portifolio/projects/index"
import { Route as PortifolioContactIndexRouteImport } from "./routes/_portifolio/contact/index"

const PortifolioRouteRoute = PortifolioRouteRouteImport.update({
  id: "/_portifolio",
  getParentRoute: () => rootRouteImport,
} as any)
const PortifolioIndexRoute = PortifolioIndexRouteImport.update({
  id: "/",
  path: "/",
  getParentRoute: () => PortifolioRouteRoute,
} as any)
const PortifolioTimeLineIndexRoute = PortifolioTimeLineIndexRouteImport.update({
  id: "/time-line/",
  path: "/time-line/",
  getParentRoute: () => PortifolioRouteRoute,
} as any)
const PortifolioProjectsIndexRoute = PortifolioProjectsIndexRouteImport.update({
  id: "/projects/",
  path: "/projects/",
  getParentRoute: () => PortifolioRouteRoute,
} as any)
const PortifolioContactIndexRoute = PortifolioContactIndexRouteImport.update({
  id: "/contact/",
  path: "/contact/",
  getParentRoute: () => PortifolioRouteRoute,
} as any)

export interface FileRoutesByFullPath {
  "/": typeof PortifolioIndexRoute
  "/contact": typeof PortifolioContactIndexRoute
  "/projects": typeof PortifolioProjectsIndexRoute
  "/time-line": typeof PortifolioTimeLineIndexRoute
}
export interface FileRoutesByTo {
  "/": typeof PortifolioIndexRoute
  "/contact": typeof PortifolioContactIndexRoute
  "/projects": typeof PortifolioProjectsIndexRoute
  "/time-line": typeof PortifolioTimeLineIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  "/_portifolio": typeof PortifolioRouteRouteWithChildren
  "/_portifolio/": typeof PortifolioIndexRoute
  "/_portifolio/contact/": typeof PortifolioContactIndexRoute
  "/_portifolio/projects/": typeof PortifolioProjectsIndexRoute
  "/_portifolio/time-line/": typeof PortifolioTimeLineIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: "/" | "/contact" | "/projects" | "/time-line"
  fileRoutesByTo: FileRoutesByTo
  to: "/" | "/contact" | "/projects" | "/time-line"
  id:
    | "__root__"
    | "/_portifolio"
    | "/_portifolio/"
    | "/_portifolio/contact/"
    | "/_portifolio/projects/"
    | "/_portifolio/time-line/"
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  PortifolioRouteRoute: typeof PortifolioRouteRouteWithChildren
}

declare module "@tanstack/react-router" {
  interface FileRoutesByPath {
    "/_portifolio": {
      id: "/_portifolio"
      path: ""
      fullPath: ""
      preLoaderRoute: typeof PortifolioRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    "/_portifolio/": {
      id: "/_portifolio/"
      path: "/"
      fullPath: "/"
      preLoaderRoute: typeof PortifolioIndexRouteImport
      parentRoute: typeof PortifolioRouteRoute
    }
    "/_portifolio/time-line/": {
      id: "/_portifolio/time-line/"
      path: "/time-line"
      fullPath: "/time-line"
      preLoaderRoute: typeof PortifolioTimeLineIndexRouteImport
      parentRoute: typeof PortifolioRouteRoute
    }
    "/_portifolio/projects/": {
      id: "/_portifolio/projects/"
      path: "/projects"
      fullPath: "/projects"
      preLoaderRoute: typeof PortifolioProjectsIndexRouteImport
      parentRoute: typeof PortifolioRouteRoute
    }
    "/_portifolio/contact/": {
      id: "/_portifolio/contact/"
      path: "/contact"
      fullPath: "/contact"
      preLoaderRoute: typeof PortifolioContactIndexRouteImport
      parentRoute: typeof PortifolioRouteRoute
    }
  }
}

interface PortifolioRouteRouteChildren {
  PortifolioIndexRoute: typeof PortifolioIndexRoute
  PortifolioContactIndexRoute: typeof PortifolioContactIndexRoute
  PortifolioProjectsIndexRoute: typeof PortifolioProjectsIndexRoute
  PortifolioTimeLineIndexRoute: typeof PortifolioTimeLineIndexRoute
}

const PortifolioRouteRouteChildren: PortifolioRouteRouteChildren = {
  PortifolioIndexRoute: PortifolioIndexRoute,
  PortifolioContactIndexRoute: PortifolioContactIndexRoute,
  PortifolioProjectsIndexRoute: PortifolioProjectsIndexRoute,
  PortifolioTimeLineIndexRoute: PortifolioTimeLineIndexRoute,
}

const PortifolioRouteRouteWithChildren = PortifolioRouteRoute._addFileChildren(
  PortifolioRouteRouteChildren,
)

const rootRouteChildren: RootRouteChildren = {
  PortifolioRouteRoute: PortifolioRouteRouteWithChildren,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
